
log_format bodylog escape=json '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" $request_time '
        '<"$request_body" >"$resp_body"';

access_log  /dev/stdout  bodylog;

server {
    listen       80;

    lua_need_request_body on;
    set $resp_body "";
    body_filter_by_lua '
        local resp_body = string.sub(ngx.arg[1], 1, 1000)
        ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
        if ngx.arg[2] then
            ngx.var.resp_body = ngx.ctx.buffered
        end
    ';
    access_log  /dev/stdout  bodylog;

    location / {
        # this block just has all parameters needed for any kinds of reverse proxying

        proxy_pass http://example_web:80/;

        # https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/How-to-setup-Nginx-reverse-proxy-servers-by-example
        proxy_buffering off;
        # proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/
        # proxy_set_header   Connection        $connection_upgrade;
        proxy_set_header   Upgrade           $http_upgrade;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_max_temp_file_size 0;
        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_request_buffering    off;
    }

}